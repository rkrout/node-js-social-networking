CREATE DATABASE socialNetworking;

USE socialNetworking;

CREATE TABLE users (
    id BIGINT(20) PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(20) NOT NULL,
    email VARCHAR(20) UNIQUE NOT NULL,
    password VARCHAR(100) NOT NULL,
    profileImage VARCHAR(100),
    coverImage VARCHAR(100)
);

CREATE TABLE posts (
    id BIGINT(20) PRIMARY KEY AUTO_INCREMENT,
    description TEXT,
    image VARCHAR(100),
    postedAt DATETIME,
    userId BIGINT(20) NOT NULL,
    FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE comments (
    id BIGINT(20) PRIMARY KEY AUTO_INCREMENT,
    comment TEXT NOT NULL,
    commentedAt TIMESTAMP,
    userId BIGINT(20) NOT NULL,
    postId BIGINT(20) NOT NULL,
    FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (postId) REFERENCES posts(id) ON DELETE CASCADE ON UPDATE CASCADE 
);

CREATE TABLE followers (
    id BIGINT(20) PRIMARY KEY AUTO_INCREMENT,
    followingId BIGINT(20) NOT NULL,
    followerId BIGINT(20) NOT NULL,
    FOREIGN KEY (followingId) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (followerId) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE 
);

CREATE TABLE likes (
    postId BIGINT(20) NOT NULL,
    userId BIGINT(20) NOT NULL,
    FOREIGN KEY (postId) REFERENCES posts(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE 
);